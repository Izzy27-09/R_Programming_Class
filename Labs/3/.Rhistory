load("~/Github_Repos/R_Programming_Class/Lab 3/HomeworkObjects.RData")
knitr::opts_chunk$set(echo = TRUE)
load("HomeworkObjects.RData")
# Show your work here
CharacterData004
# Show your work here
CharacterData004
CharacterData004[5]
# Show your work here
fruitMatrix
# Show your work here
fruitMatrix[4]
# Show your work here
fruitMatrix
# Show your work here
fruitMatrix
fruitMatrix[4,:]
# Show your work here
fruitMatrix
fruitMatrix[4,1:]
# Show your work here
fruitMatrix
fruitMatrix[4,1:5]
# Show your work here
fruitMatrix[4,1:5]
# Show your work here
fruitMatrix[4,]
# Show your work here
letters
LETTERS
# Show your work here
letters
LETTERS
paste(LETTERS,letters,sep="",collapse = " ")
# Show your work here
paste(LETTERS[-1:],letters[-1:],sep="",collapse = " ")
# Show your work here
paste(LETTERS[-1:,letters[-1:,sep="",collapse = " ")
# Show your work here
paste(LETTERS[-1:],letters[-1:],sep="",collapse = " ")
# Show your work here
str_sort(letters)
# Show your work here
library('stringr')
str_sort(letters)
paste(LETTERS[-1:],letters[-1:],sep="",collapse = " ")
# Show your work here
library('stringr')
str_sort(letters)
# Show your work here
library('stringr')
str_sort(letters,decreasing = TRUE)
# Show your work here
library('stringr')
str_sort(letters,decreasing = TRUE)
paste(str_sort(LETTERS,decreasing = TRUE),str_sort(letters,decreasing = TRUE),sep="",collapse = " ")
# Show your work here
library('stringr')
paste(str_sort(letters,decreasing = TRUE),str_sort(LETTERS,decreasing = TRUE),sep="",collapse = " ")
# Show your work here
library('stringr')
paste(str_sort(letters,decreasing = TRUE),str_sort(LETTERS,decreasing = TRUE),sep="",collapse = " ")
# Show your work here
Coerce01
# Show your work here
Coerce01
as.logical(Coerce01)
# Show your work here
Coerce01
as.logical(Coerce01)
as.logical(Coerce01)==NA
# Show your work here
Coerce01
as.logical(Coerce01)
as.logical(Coerce01)==Na
# Show your work here
Coerce01
as.logical(Coerce01)
as.logical(Coerce01)==NA
# Show your work here
Coerce01
as.logical(Coerce01)
identical(as.logical(Coerce01),NA)
# Show your work here
Coerce01
test<-as.logical(Coerce01)
identical(test,NA)
# Show your work here
Coerce01
test<-as.logical(Coerce01)
as.logical(Coerce01)
identical(test,NA)
# Show your work here
Coerce01
as.logical(Coerce01)
identical(test,NA)
# Show your work here
Coerce01
as.logical(Coerce01)
NA==NA
# Show your work here
Coerce01
as.logical(Coerce01)
NA == NA
# Show your work here
Coerce01
as.logical(Coerce01)
isNa(as.logical(Coerce01))
# Show your work here
Coerce01
as.logical(Coerce01)
anyNA(as.logical(Coerce01))
