knitr::opts_chunk$set(echo = TRUE)
load("HomeworkObjects.RData")
knitr::opts_chunk$set(echo = TRUE)
load("HomeworkObjects.RData")
# Show your work here
for (i in 4:40) {
my_vector[i] <- sum(my_vector[(i - 3):(i - 1)])
}
# Show your work here
my_vector
# Show your work here
my_vector<-c(1:3)
for (i in 4:40) {
my_vector[i] <- sum(my_vector[(i - 3):(i - 1)])
}
# Show your work here
my_vector<-c(1:3)
for (i in 4:40) {
my_vector[i] <- sum(my_vector[(i - 3):(i - 1)])
}
my_vector
# Show your work here
vector_22<- 1
for (i in 2:40) {
vector_22[i] <- -2 * vector_22[i - 1]
}
# Show your work here
vector_22<- 1
for (i in 2:40) {
vector_22[i] <- -2 * vector_22[i - 1]
}
vector_22
# Show your work here
setdiff(Set001, Set002)
# Show your work here
chooser<-Vectorize(choose)
# Show your work here
chooser<-Vectorize(choose)
chooser(20,1:20)
# Show your work here
chooser<-Vectorize(choose)
ans<-chooser(20,0:20)
ans
# Show your work here
for (i in 1:1000) {
# Extract the i-th values from each vector
values <- c(Math001[i], Math002[i], Math003[i], Math004[i])
# Find the minimum value
min_val <- min(values)
# Store the minimum value in the min_values vector
min_values[i] <- min_val
# Display the first 20 results
if (i <= 20) {
cat("Minimum for i =", i, ":", min_val, "\n")
}
}
# Show your work here
for (i in 1:1000) {
# Extract the i-th values from each vector
values <- c(Math001[i], Math002[i], Math003[i], Math004[i])
# Find the minimum value
min_val <- min(values)
# Store the minimum value in the min_values vector
min_values[i] <- min_val
}
# Show your work here
for (i in 1:1000) {
values <- c(Math001[i], Math002[i], Math003[i], Math004[i])
min_val <- min(values)
min_values[i] <- min_val
}
# Show your work here
min_values<-0
for (i in 1:1000) {
values <- c(Math001[i], Math002[i], Math003[i], Math004[i])
min_val <- min(values)
min_values[i] <- min_val
}
# Show your work here
min_values<-0
for (i in 1:1000) {
values <- c(Math001[i], Math002[i], Math003[i], Math004[i])
min_val <- min(values)
min_values[i] <- min_val
}
min_values[1:20]
# Show your work here
non_zero <- 0
# Loop through i from 1 to 1000
for (i in 1:1000) {
values <- c(Math001[i], Math002[i], Math003[i], Math004[i])
values <- values[!is.na(values)]
min_val <- min(values)
if (min_val >= 0) {
non_zero <- non_zero + 1
}
}
non_zero
# Show your work here
MathOrdered <- Math005[order(Math005$comp2), ]
head(MathOrdered, 10)
# Show your work here
p_values<-LETTERS[1:10]
# Show your work here
p_values<-LETTERS[1:10]
sample(x=p_values,size = 3,replace = FALSE, prob = related.probabilities)
# Show your work here
p_values<-LETTERS[1:10]
sample(x=p_values,size = 3,replace = T)
# Show your work here
p_values<-LETTERS[1:10]
sample(x=p_values,size = 3,replace = T)
