knitr::opts_chunk$set(echo = TRUE)
load("HomeworkObjects.RData")
# Show your work here
library(stringr)
# Show your work here
library(stringr)
str_replace(string = sentences,pattern = "fall",replacement = "get up")
# Show your work here
library(stringr)
str_subset(string = sentences,pattern = "fall")
# Show your work here
library(stringr)
str_subset(string = sentences,pattern = "fall")
modified_sentences <- sub("fall", "get up", sentences)
modified_sentences
# Show your work here
library(stringr)
str_subset(string = sentences,pattern = "fall")
modified_sentences <- sub("fall", "get up", sentences)
replaced_indices <- which(sentences != modified_sentences)
replaced_indices
# Show your work here
library(stringr)
str_subset(string = sentences,pattern = "fall")
modified_sentences <- sub("fall", "get up", sentences)
replaced_indices <- which(sentences != modified_sentences)
replaced_indices
cat("\nModified sentences:\n", modified_sentences[replaced_indices[1:3]], "\n")
# Show your work here
library(stringr)
checked_str<-str_subset(string = sentences,pattern = "fall")
modified_sentences <- str_replace(checked_str,pattern = "fall",replacement = "get up")
# Show your work here
library(stringr)
checked_str<-str_subset(string = sentences,pattern = "fall")
modified_sentences <- str_replace(checked_str,pattern = "fall",replacement = "get up")
head(modified_sentences,n=1)
# Show your work here
library(stringr)
checked_str<-str_subset(string = sentences,pattern = "fall")
modified_sentences <- str_replace(checked_str,pattern = "fall",replacement = "get up")
head(modified_sentences,n=1)
tail(modified_sentences,n=3)
length(modified_sentences)
# Show your work here
library(stringr)
starting_strings <- c("A", "Ad", "Add", "Aing", "Ading", "Adding")
filtered_sentences <- str_subset(sentences, str_c("^", paste(starting_strings, collapse = "|")))
filtered_sentences
# Show your work here
library(stringr)
starting_strings <- c("A", "Ad", "Add", "Aing", "Ading", "Adding")
filtered_sentences <- str_subset(sentences, str_c("^", paste(starting_strings, collapse = "|")))
length(filtered_sentences)
# Show your work here
pattern <- "^The.*the.*ed.*ed$"
# Find sentences that satisfy the specified conditions
selected_sentences <- str_subset(sentences, pattern)
# Show your work here
pattern <- "^The.*the.*ed.*ed$"
# Find sentences that satisfy the specified conditions
selected_sentences <- str_subset(sentences, pattern)
selected_sentences
# Show your work here
pattern <- "^The.*the.*ed.*ed$"
# Find sentences that satisfy the specified conditions
str_subset(sentences, pattern = "^The. ed$")
# Show your work here
pattern <- "^The.*the.*ed.*ed$"
# Find sentences that satisfy the specified conditions
str_subset(sentences, pattern = "^The.ed$")
# Show your work here
pattern <- "^The.*the.*ed.*ed$"
# Find sentences that satisfy the specified conditions
str_subset(sentences, pattern = "^The.*ed$")
# Show your work here
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Create a single vector containing all strings that satisfy the conditions
filtered_sentences <- str_subset(sentences, str_detect(sentences, condition1) &str_detect(sentences, condition2))
# Show your work here
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Create a single vector containing all strings that satisfy the conditions
filtered_sentences <- str_subset(sentences, str_detect(sentences, condition1) & str_detect(sentences, condition2))
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Create a single regular expression for both conditions
combined_condition <- paste(condition1, condition2, sep = "&")
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, combined_condition)
# Display the resulting vector
cat("Filtered sentences:\n", filtered_sentences, "\n")
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "ed$")
# Display the resulting vector
cat("Filtered sentences:\n", filtered_sentences, "\n")
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "ed$")
filtered_sentences
# Show your work here
library(stringr)
starting_strings <- c("A", "Ad", "Add", "Aing", "Ading", "Adding")
filtered_sentences <- str_subset(sentences, str_c("^", paste(starting_strings, collapse = "|")))
length(filtered_sentences)
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The*")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The*ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The*(ed)")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*+(ed)")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*+(ed)+*(the)")
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*+(ed)*+(the)")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*+(ed)*+(the)+(ed$)")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*+(ed)*+(the)*+(ed$)")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*+(the)*+(ed$)")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*+(the)*")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "(^The)*+(ed)")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The*ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the.*ed$")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the.*ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the .*ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the .ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the .*$ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the .*ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the.*ed")
filtered_sentences
# Show your work here
# Define the conditions
condition1 <- "^The"  # The string starts with "The"
condition2 <- ".*the.*ed.*the.*ed$"  # The string contains "ed" twice with "the" in between
# Use str_subset to filter sentences that satisfy the conditions
filtered_sentences <- str_subset(sentences, "^The.*ed.*the .*ed")
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "^The.*ed.*the .*ed$")
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er)")
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]")
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]\\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z] \\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-z A-Z] \\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-z] \\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-z]")
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-z]\\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-z] \\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z])
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-z A-Z])
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-z])
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]")
filtered_sentences
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]?\\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]? \\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z].? \\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]*? \\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]* \\2")
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]* \\1")
filtered_sentences
condition_a <- "(er|se)"
condition_b <- "([a-zA-Z])\\1"
condition_c <- paste0(".*", condition_a, ".*")
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, str_detect(sentences, condition_a) &
str_detect(sentences, condition_b) &
str_detect(sentences, condition_c))
# Show your work here
filtered_sentences <- str_subset(sentences, "(se|er).*[a-zA-Z]* \\1")
filtered_sentences
pattern <- "(er|se).*([[:alpha:]])\\1.*er|se"
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, str_detect(sentences, pattern))
pattern <- "(er|se).*([[:alpha:]])\\1.*er|se"
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, pattern)
# Display the resulting vector
cat("Filtered sentences:\n", filtered_sentences, "\n")
pattern <- "(er|se).*([[:alpha:]])\\1.*er|se"
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, pattern)
# Display the resulting vector
filtered_sentences
pattern <- "(er|se).*([[:alpha:]])\\1.*(er|se)"
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, pattern)
# Display the resulting vector
filtered_sentences
pattern <- "(er|se).*([[:alpha:]])\\2.*(er|se)"
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, pattern)
# Display the resulting vector
filtered_sentences
pattern <- "(er|se).*([a-zA-Z])\\2.*(er|se)"
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, pattern)
# Display the resulting vector
filtered_sentences
pattern <- "(er|se).*([a-zA-Z])\\2.*\\1"
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, pattern)
# Display the resulting vector
filtered_sentences
# Show your work here
pattern <- "(er|se).*([a-zA-Z])\\2.*\\1"
# Create a single vector containing all strings that satisfy the specified conditions
filtered_sentences <- str_subset(sentences, pattern)
# Display the resulting vector
filtered_sentences
# Show your work here
library(openintro)
install.packages("openintro")
# Show your work here
library(openintro)
library(dplyr)
# Show your work here
library(openintro)
library(dplyr)
data("nycflights")
# Show your work here
library(openintro)
library(dplyr)
data("nycflights")
nycflights
# Show your work here
library(openintro)
library(dplyr)
data("nycflights")
nycflights|>
group_by(carrier,origin)|>
summarise(
avg_dep_delay = mean(dep_delay, na.rm = TRUE)
)
# Show your work here
library(openintro)
library(dplyr)
data("nycflights")
nycflights|>
group_by(carrier,origin)|>
summarise(
avg_dep_delay = mean(dep_delay, na.rm = TRUE),
avg_arr_delay = mean(arr_delay, na.rm = TRUE),
min_dep_delay = min(dep_delay, na.rm = TRUE),
max_dep_delay = max(dep_delay, na.rm = TRUE),
min_arr_delay = min(arr_delay, na.rm = TRUE),
max_arr_delay = max(arr_delay, na.rm = TRUE)
)
install.packages("babynames")
# Show your work here
data("babynames")
# Show your work here
data("babynames")
# Show your work here
library(babynames)
# Show your work here
library(babynames)
babynames
# Show your work here
library(babynames)
babynames|>
group_by(
sex,year
)|>
summarise(max_num=max(n))
# Show your work here
library(babynames)
library(ggplot2)
babynames|>
group_by(
sex,year
)|>
summarise(max_num=max(n))|>
ggplot()
# Show your work here
library(babynames)
library(ggplot2)
babynames|>
group_by(
sex,year
)|>
summarise(max_num=max(n))|>
ggplot(aes(y=max_num,x=year,color=sex))+geom_line()
# Show your work here
library(babynames)
library(ggplot2)
babynames|>
group_by(
sex,year
)|>
summarise(max_num=max(n))|>
ggplot(aes(y=max_num,x=year,color=sex))+geom_line(linetype=sex)
# Show your work here
library(babynames)
library(ggplot2)
babynames|>
group_by(
sex,year
)|>
summarise(max_num=max(n))|>
ggplot(aes(y=max_num,x=year,color=sex))+geom_line(aes(linetype=sex))
# Show your work here
library(babynames)
library(ggplot2)
babynames|>
group_by(
sex,year
)|>
summarise(max_num=max(n))|>
ggplot(aes(y=max_num,x=year,color=sex))+geom_smooth(aes(linetype=sex))
# Show your work here
library(babynames)
library(ggplot2)
babynames|>
group_by(
sex,year
)|>
summarise(max_num=max(n))|>
ggplot(aes(y=max_num,x=year,color=sex))+geom_smooth(aes(linetype=sex))+
labs(
x="year",
y="maximum"
)
